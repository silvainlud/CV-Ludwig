$hover_percent: 15%;

.app-btn {
  padding: 14px 20px;
  box-sizing: border-box;
  display: inline-block;

  &.app-btn-small {
    padding: 10px 15px;
    font-size: 0.9em;
  }

  border-radius: 7px;


  font-family: Roboto, sans-serif;

  background: $light_blue_color;
  border: 2px solid $light_blue_color;
  color: white;

  text-decoration: unset;
  cursor: pointer;
  outline: none;

  &.app-btn-fluent {
    background: transparent;
    color: white;

    &:not(:disabled):not([disabled]):hover {
      background: $light_blue_color;
      border-color: $light_blue_color;
      color: white;
    }
  }

  &.app-btn-inverse, &.app-btn-outline {
    background: transparent;
    color: $light_blue_color;

    &:not(:disabled):not([disabled]):hover {
      background: $light_blue_color;
      border-color: $light_blue_color;
      color: white;
    }
  }

  &:not(:disabled):not([disabled]):hover {
    border-color: darken($light_blue_color, 25%);
    background-color: darken($light_blue_color, 25%);
  }

  @each $class, $color in $colors {
    &.app-btn-#{$class} {
      background: $color;
      border-color: $color;
      color: white;

      &:not(:disabled):not([disabled]):hover {
        border-color: darken($color, $hover_percent);
        background-color: darken($color, $hover_percent);
      }

      &.app-btn-fluent {
        background: lighten($color, $hover_percent);
        border-color: lighten($color, $hover_percent);
        color: mix(lighten($color, $hover_percent), black, 50%);

        &:not(:disabled):not([disabled]):hover {
          background: lighten($color, 5%);
          border-color: lighten($color, 5%);

          @if lightness($color) - 15 <= lightness(mix($color, black, 50%)) {
            color: mix($color, white, 30%);
          } @else {
            color: mix($color, black, 50%)
          }
        }
      }

      &.app-btn-inverse, &.app-btn-outline {
        background: transparent;
        color: $color;

        &:not(:disabled):not([disabled]):hover {
          background: $color;
          border-color: $color;
          color: white;
        }

      }
    }
  }

  i {
    &:first-child {
      margin-left: 0;
    }

    margin: 0 4px;

    &:last-child {
      margin-left: 0;
    }
  }

  &:disabled, &[disabled] {
    cursor: not-allowed;
    background: mix($light_blue_color, white, 60%);
    border-color: mix($light_blue_color, white, 60%);
  }

  transition: background-color 0.3s ease-in-out, border-color 0.3s ease-in-out, color 0.3s ease-in-out;
}