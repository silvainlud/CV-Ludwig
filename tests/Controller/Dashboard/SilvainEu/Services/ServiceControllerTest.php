<?php

namespace App\Tests\Controller\Dashboard\SilvainEu\Services;

use App\Entity\Main\SilvainEu\Service;
use App\Tests\Controller\WebTestCase;
use Symfony\Component\HttpFoundation\File\UploadedFile;
use Symfony\Component\HttpFoundation\Request;

/**
 * @internal
 * @coversNothing
 */
class ServiceControllerTest extends WebTestCase
{
    protected Service $service;

    protected function setUp(): void
    {
        $this->fixtures[] = __DIR__ . '/../../../../Fixtures/Main/SilvainEu/Services/ServiceFixtures.yaml';
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->service = $this->em->getRepository(Service::class)->findOneBy([], ['name' => 'asc']);
    }

    public function testFound()
    {
        $this->login('admin');
        $this->client->request(Request::METHOD_GET, '/dashboard/silvaineu/services');
        self::assertResponseIsSuccessful();

        $this->client->request(Request::METHOD_GET, '/dashboard/silvaineu/services/add');
        self::assertResponseIsSuccessful();
    }

    public function testAdd()
    {
        $this->login('admin');
        $crawler = $this->client->request(Request::METHOD_GET, '/dashboard/silvaineu/services/add');
        $form = $crawler->filter('#service_submit')->form([
            'service[link]' => 'http://gotobac.net',
            'service[name]' => 'gotobac.net',
            'service[description]' => 'description',
            'service[upload]' => new UploadedFile(__DIR__ . '/../../../../../public/favicon.png', 'favicon.png', '	image/png', null),
        ]);
        $this->client->submit($form);
        self::assertResponseRedirects();

        $s = $this->em->getRepository(Service::class)->findOneBy(['name' => 'gotobac.net']);
        self::assertEquals('gotobac.net', $s->getName());
        self::assertEquals('description', $s->getDescription());
        self::assertNotNull($s->getImage());
        self::assertEquals('http://gotobac.net', $s->getLink());
        self::assertEquals('png', $s->getImageExtension());
        self::assertNotNull($s->getSlug());
    }

    public function testEdit()
    {
        $this->login('admin');
        $crawler = $this->client->request(Request::METHOD_GET, '/dashboard/silvaineu/services/edit/' . $this->service->getSlug());
        $form = $crawler->filter('#service_submit')->form([
            'service[name]' => 'webmail',
        ]);
        $this->client->submit($form);
        self::assertResponseRedirects();

        $s = $this->em->getRepository(Service::class)->find($this->service->getId());

        self::assertEquals('webmail', $s->getName());
        self::assertEquals($this->service->getDescription(), $s->getDescription());
        self::assertEquals(base64_encode($this->service->getImage()), base64_encode(stream_get_contents($s->getImage())));
        self::assertEquals($this->service->getLink(), $s->getLink());
        self::assertEquals($this->service->getImageExtension(), $s->getImageExtension());
        self::assertNotEquals($this->service->getSlug(), $s->getSlug());
    }
}
