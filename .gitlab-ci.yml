image: php:zts-buster
cache:
  paths:
    - vendor/
    - node_modules/
    - public/build/


services:
  - redis:latest

stages:
  - compile
  - test
  - build

variables:
  DB_HOST: mysql
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""

before_script:
  - apt-get update && apt-get install -y gnupg2 curl wget unzip git
  - docker-php-ext-install -j$(nproc) xml && docker-php-ext-install -j$(nproc) ctype && docker-php-ext-install -j$(nproc) zip unzip && docker-php-ext-install -j$(nproc) geoip && docker-php-ext-install -j$(nproc) mbstring && docker-php-ext-install -j$(nproc) readline && docker-php-ext-install -j$(nproc) uuid && docker-php-ext-install -j$(nproc) simplexml && docker-php-ext-install -j$(nproc) json && docker-php-ext-install -j$(nproc) phar && docker-php-ext-install -j$(nproc) curl && docker-php-ext-install -j$(nproc) memcached && docker-php-ext-install -j$(nproc) intl && docker-php-ext-install -j$(nproc) odbc && docker-php-ext-install -j$(nproc) opcache && docker-php-ext-install -j$(nproc) yaml && docker-php-ext-install -j$(nproc) cli && docker-php-ext-install -j$(nproc) dom && docker-php-ext-install -j$(nproc) fpm && docker-php-ext-install -j$(nproc) apcu && docker-php-ext-install -j$(nproc) pdo && docker-php-ext-install -j$(nproc) dev && docker-php-ext-install -j$(nproc) xml && docker-php-ext-install -j$(nproc) intl && docker-php-ext-install -j$(nproc) gd && docker-php-ext-install -j$(nproc) redis && docker-php-ext-install -j$(nproc) zip && docker-php-ext-install -j$(nproc) pgsql && docker-php-ext-install -j$(nproc) mysql && docker-php-ext-install -j$(nproc) pdo_mysql
  - docker-php-ext-install mysqli pdo pdo_mysql
  - php -r "readfile('http://getcomposer.org/installer');" | php -- --install-dir=/usr/bin/ --filename=composer

compile:composer:
  stage: compile
  tags:
    - docker
  script:
    - composer install --prefer-dist --no-ansi --no-interaction --no-progress

compile:nodejs:
  before_script: []
  image: node
  stage: compile
  tags:
    - docker
  script:
    - yarn install --ignore-engines
    - yarn encore dev

phpunit:
  stage: test
  tags:
    - docker
  script:
#    - php bin/console doctrine:schema:update --force --env=test
    #    - php bin/console doctrine:fixture:load --no-interaction --env=test
    - php bin/phpunit
  dependencies:
    - compile:composer
    - compile:nodejs

docker-build-master:
  # Official docker image.
  image: docker:latest
  stage: build
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE" .
    - docker push "$CI_REGISTRY_IMAGE"
  only:
    - master